# This following script attempts build dependible conda environments on linux
# numpy, pandas and matplotlib are required dependencies; care is needed
# in improving build time and reproducibilty.

sudo: false                                              # works w/Docker
language: python
python:
  - "2.7"
  - "3.3"
  - "3.4"
  - "3.5"
#  - "3.5-dev" # 3.5 development branch

notifications:
  email: false

# Useful packages for building numpy; turned off for now
#cache: apt
#addons:
#  apt:
#    packages:
#    - libatlas-dev
#    - libatlas-base-dev
#    - liblapack-dev
#    - gfortran

# Setup conda
before_install:
  # We do this conditionally because it saves us some downloading if the
  # version is the same.
  - if [[ "$TRAVIS_PYTHON_VERSION" == "2.7" ]]; then
      wget https://repo.continuum.io/miniconda/Miniconda-latest-Linux-x86_64.sh -O miniconda.sh;
    else
      wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh;
    fi
    ##- chmod +x miniconda.sh                                # release permissions
  - bash miniconda.sh -b -p $HOME/miniconda
  - export PATH="$HOME/miniconda/bin:$PATH"
  - hash -r
  - conda config --set always_yes yes --set changeps1 no   # say yes to prompts
  - conda update -q conda
  ##- conda update --yes conda                               # update since mini lags behind conda
    # Useful for debugging any issues with conda
  - conda info -a
  # The next couple lines fix a crash with multiprocessing on Travis and are not specific to using Miniconda
  ##- rm -rf /dev/shm
  ##- ln -s /run/shm /dev/shm

install:
  # Ensure pip and nose will install in the conda env
  - conda create -q -n test-environment python=$TRAVIS_PYTHON_VERSION pip nose numpy matplotlib pandas
  - source activate test-environment
  ##- python setup.py install
  #- "pip install -r requirements.txt"                    # Command to pre-install pinned dependencies
  # Command to install source and build/install wheels
  - "pip install ."
  #- "pip install wheel"
  #- "python setup.py bdist_wheel"
  #- "pip install dist/*.whl"
  - "pip list"


# Command to run tests
script:
  - nosetests

# after_success:
#  - coveralls

#branches:
#  only:
    #- master
    #- develop


# References
# ----- ---------                           -------------
# (001) Conda and coverage on Travis        http://dan-blanchard.roughdraft.io/7045057-quicker-travis-builds-that-rely-on-numpy-and-scipy-using-miniconda
# (002) Travis and conda                    http://conda.pydata.org/docs/travis.html
# (003) Conda on Travis w/details           http://lmjohns3.com/2015/06/using-travis-ci-with-miniconda-scipy-and-nose.html
# (004) Example yaml                        https://github.com/lmjohns3/theanets/blob/master/.travis.yml
# (005) Example 2 yaml                      http://samueljackson.me/2015/12/12/better-python-travis-config.html
